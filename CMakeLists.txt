# CMake build for the Apache APR Utility Library.
# SEE WARNING BELOW.
#
# Copyright (C) 2012 LuaDist.
# Created by David Manura (CMakeLists.txt).
# Redistribution and use of this file is allowed according to the terms of the MIT license.
# For details see the COPYRIGHT file distributed with LuaDist.
# Please note that the package source code is licensed under its own license.
# Note: Based partly on configure.in and apr.h.in in Apache APR (which has its own
# copyright--see LICENSE).

project ( apr-util C )

cmake_minimum_required ( VERSION 2.8 )
include ( dist.cmake )

message ( WARNING
"
WARNING!!!
THE CMAKE BUILD FOR THIS LIBRARY IS PRELIMINARY.
IT LIKELY WON'T WORK AS IS.
PLEASE FIX ANY PROBLEMS YOU FIND.
It was adapted from the autoconf build,
which is fairly complex.
")

find_package(APR REQUIRED)

include_directories ( ${APR_INCLUDE_DIR} ) # for apr.h and apr_lib.h
include_directories ( ${CMAKE_CURRENT_BINARY_DIR} )
include_directories ( ${CMAKE_CURRENT_SOURCE_DIR}/include )
include_directories ( ${CMAKE_CURRENT_SOURCE_DIR}/include/private )

# from apu_config.h.cmake
message ( WARNING "FIX: apu_config.h.cmake variables" )

# from apu.h.in
message ( WARNING "FIX: apu.h.in variables" )
set ( apu_have_sdbm 0 )
set ( apu_have_gdbm 0 )
set ( apu_have_ndbm 0 )
set ( apu_have_db 0 )
##if APU_HAVE_DB
##define APU_HAVE_DB_VERSION    @apu_db_version@
##endif
set ( apu_have_pgsql 0 )
set ( apu_have_mysql 0 )
set ( apu_have_sqlite3 0 )
set ( apu_have_sqlite2 0 )
set ( apu_have_oracle 0 )
set ( apu_have_freetds 0 )
set ( apu_have_odbc 0 )
set ( apu_have_crypto 0 )
set ( apu_have_openssl 0 )
set ( apu_have_nss 0 )
set ( have_apr_iconv 0 )
set ( have_iconv 0 )

# from apr_ldap.h.in
message ( WARNING "FIX: apr_ldap.h.in variables" )
set ( apu_has_ldap 0 )
set ( apu_has_ldap_netscape 0 )
set ( apu_has_ldap_solaris 0 )
set ( apu_has_ldap_novell 0 )
set ( apu_has_ldap_mozilla 0 )
set ( apu_has_ldap_openldap 0 )
set ( apu_has_ldap_microsoft 0 )
set ( apu_has_ldap_tivoli 0 )
set ( apu_has_ldap_zos 0 )
set ( apu_has_ldap_other 0 )
set ( lber_h )
set ( ldap_h )
set ( ldap_ssl_h )
set ( apu_has_ldapssl_client_init 0 )
set ( apu_has_ldapssl_client_deinit 0 )
set ( apu_has_ldapssl_add_trusted_cert 0 )
set ( apu_has_ldap_start_tls_s 0 )
set ( apu_has_ldap_sslinit 0 )
set ( apu_has_ldapssl_init 0 )
set ( apu_has_ldapssl_install_routines 0 )

# from apu_want.h.in
message ( WARNING "FIX: apu_want.h.in variables")
#set ( apu_db_header )

configure_file (
  ${CMAKE_CURRENT_SOURCE_DIR}/include/private/apu_config.h.cmake
  ${CMAKE_CURRENT_BINARY_DIR}/apu_config.h )
configure_file (
  ${CMAKE_CURRENT_SOURCE_DIR}/include/apu.h.in
  ${CMAKE_CURRENT_BINARY_DIR}/apu.h )
configure_file (
  ${CMAKE_CURRENT_SOURCE_DIR}/include/apu_want.h.in
  ${CMAKE_CURRENT_BINARY_DIR}/apu_want.h )
configure_file (
  ${CMAKE_CURRENT_SOURCE_DIR}/include/apr_ldap.h.in
  ${CMAKE_CURRENT_BINARY_DIR}/apr_ldap.h )

# based on build-outputs.mk, in turn generated by gen-build.py

set ( SRC_all
  buckets/apr_brigade.c
  buckets/apr_buckets.c
  buckets/apr_buckets_alloc.c
  buckets/apr_buckets_eos.c
  buckets/apr_buckets_file.c
  buckets/apr_buckets_flush.c
  buckets/apr_buckets_heap.c
  buckets/apr_buckets_mmap.c
  buckets/apr_buckets_pipe.c
  buckets/apr_buckets_pool.c
  buckets/apr_buckets_refcount.c
  buckets/apr_buckets_simple.c
  buckets/apr_buckets_socket.c
  crypto/apr_crypto.c
  crypto/apr_md4.c
  crypto/apr_md5.c
  crypto/apr_sha1.c
  crypto/getuuid.c
  crypto/uuid.c
  dbd/apr_dbd.c
  dbm/apr_dbm.c
  dbm/apr_dbm_sdbm.c
  dbm/sdbm/sdbm.c
  dbm/sdbm/sdbm_hash.c
  dbm/sdbm/sdbm_lock.c
  dbm/sdbm/sdbm_pair.c
  encoding/apr_base64.c
  hooks/apr_hooks.c
  ldap/apr_ldap_stub.c
  ldap/apr_ldap_url.c
  memcache/apr_memcache.c
  misc/apr_date.c
  misc/apr_queue.c
  misc/apr_reslist.c
  misc/apr_rmm.c
  misc/apr_thread_pool.c
  misc/apu_dso.c
  misc/apu_version.c
  strmatch/apr_strmatch.c
  uri/apr_uri.c
  xlate/xlate.c
  xml/apr_xml.c
)

set ( SRC_unix $(SRC_all) )

set ( SRC_aix $(SRC_all) )

set ( SRC_beos $(SRC_all) )

set ( SRC_os2 $(SRC_all) )

set ( SRC_os390 $(SRC_all) )

set ( SRC_win32 $(SRC_all) )

#SOURCE_DIRS = xml dbm encoding hooks buckets uri misc crypto dbd strmatch memcache dbm/sdbm ldap xlate $(EXTRA_SOURCE_DIRS)

set ( SRC_ldap
  ldap/apr_ldap_init.c
  ldap/apr_ldap_option.c
  ldap/apr_ldap_rebind.c
)

add_library ( apr_ldap SHARED ${SRC_ldap} ) # ${LDADD_ldap}

set ( SRC_crypto_openssl
  crypto/apr_crypto_openssl.c
)

add_library ( apr_crypto_openssl SHARED ${SRC_crypto_openssl} ) # ${LDADD_crypto_openssl}

set ( SRC_crypto_nss
  crypto/apr_crypto_nss.c
)
add_library ( apr_crypto_nss SHARED ${SRC_crypto_nss} )  # ${LDADD_crypto_nss}

set ( SRC_dbd_pgsql
  dbd/apr_dbd_pgsql.c
)
add_library ( apr_dbd_pgsql SHARED ${SRC_dbd_pgsql} ) # ${LDADD_dbd_pgsql}

set ( SRC_dbd_sqlite2
  dbd/apr_dbd_sqlite2.c
)
add_library ( apr_dbd_sqlite2 SHARED ${SRC_dbd_sqlite2} ) # ${LDADD_dbd_sqlite2}

set ( SRC_dbd_sqlite3
  dbd/apr_dbd_sqlite3.c
)
add_library ( apr_dbd_sqlite3 SHARED ${SRC_dbd_sqlite3} ) #${LDADD_dbd_sqlite3}

set ( SRC_dbd_oracle
  dbd/apr_dbd_oracle.c
)
add_library ( apr_dbd_oracle SHARED  ${SRC_dbd_oracle} ) # ${LDADD_dbd_oracle}

set ( SRC_dbd_mysql
  dbd/apr_dbd_mysql.c
)
add_library ( apr_dbd_mysql SHARED ${SRC_dbd_mysql} )  # ${LDADD_dbd_mysql}

set ( SRC_dbd_freetds
  dbd/apr_dbd_freetds.c
)
add_library ( apr_dbd_freetds SHARED ${SRC_dbd_freetds} ) # ${LDADD_dbd_freetds}

set ( SRC_dbd_odbc
  dbd/apr_dbd_odbc.c
)
add_library ( apr_dbd_odbc SHARED ${SRC_dbd_odbc} ) # ${LDADD_dbd_odbc}

set ( SRC_dbm_db
  dbm/apr_dbm_berkeleydb.c
)
add_library ( apr_dbm_db SHARED ${SRC_dbm_db}  ) # ${LDADD_dbm_db}

set ( SRC_dbm_gdbm
  dbm/apr_dbm_gdbm.c
)
add_library ( apr_dbm_gdbm SHARED ${SRC_dbm_gdbm} ) # ${LDADD_dbm_gdbm}

set ( SRC_dbm_ndbm
  dbm/apr_dbm_ndbm.c
)
add_library ( apr_dbm_ndbm SHARED ${SRC_dbm_ndbm} )  # ${LDADD_dbm_ndbm}

# BUILD_DIRS = buckets crypto dbd dbm dbm/sdbm encoding hooks ldap memcache misc strmatch uri xlate xml

enable_testing()
#TODO: add_subdirectory ( test )

install_library ( apr_crypto_openssl )
install_library ( apr_crypto_nss )
install_library ( apr_dbd_pgsql )
install_library ( apr_dbd_sqlite2 )
install_library ( apr_dbd_sqlite3 )
install_library ( apr_dbd_oracle )
install_library ( apr_dbd_mysql )
install_library ( apr_dbd_freetds )
install_library ( apr_dbd_odbc )
install_library ( apr_dbm_db )
install_library ( apr_dbm_gdbm )
install_library ( apr_dbm_ndbm )

install_header (
  ${CMAKE_CURRENT_BINARY_DIR}/apr_ldap.h
  ${CMAKE_CURRENT_BINARY_DIR}/apu.h
  ${CMAKE_CURRENT_BINARY_DIR}/apu_want.h
  include/apr_anylock.h
  include/apr_base64.h
  include/apr_buckets.h
  include/apr_crypto.h
  include/apr_date.h
  include/apr_dbd.h
  include/apr_dbm.h
  include/apr_hooks.h
  include/apr_ldap_init.h
  include/apr_ldap_option.h
  include/apr_ldap_rebind.h
  include/apr_ldap_url.h
  include/apr_md4.h
  include/apr_md5.h
  include/apr_memcache.h
  include/apr_optional.h
  include/apr_optional_hooks.h
  include/apr_queue.h
  include/apr_reslist.h
  include/apr_rmm.h
  include/apr_sdbm.h
  include/apr_sha1.h
  include/apr_strmatch.h
  include/apr_thread_pool.h
  include/apr_uri.h
  include/apr_uuid.h
  include/apr_xlate.h
  include/apr_xml.h
  include/apu_errno.h
  include/apu_version.h
)

install_doc ( CHANGES LICENSE README )
